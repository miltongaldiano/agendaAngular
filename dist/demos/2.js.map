{"version":3,"sources":["webpack:///./src/app/demo-modules/async-events/component.ts?93f9","webpack:///./src/app/demo-modules/async-events/module.ts?4671","webpack:///./src/app/demo-modules/async-events/template.html?4646","webpack:///./src/app/demo-modules/async-events/component.ts?faea","webpack:///./src/app/demo-modules/async-events/module.ts?8ce4","webpack:///./src/app/demo-modules/async-events/sources.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Component, ChangeDetectionStrategy, OnInit } from <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { HttpClient, HttpParams } from <span class=\\\"hljs-string\\\">'@angular/common/http'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { map } from <span class=\\\"hljs-string\\\">'rxjs/operators'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { CalendarEvent } from <span class=\\\"hljs-string\\\">'angular-calendar'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> {\\n  isSameMonth,\\n  isSameDay,\\n  startOfMonth,\\n  endOfMonth,\\n  startOfWeek,\\n  endOfWeek,\\n  startOfDay,\\n  endOfDay,\\n  format\\n} from <span class=\\\"hljs-string\\\">'date-fns'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { Observable } from <span class=\\\"hljs-string\\\">'rxjs'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { colors } from <span class=\\\"hljs-string\\\">'../demo-utils/colors'</span>;\\n\\n<span class=\\\"hljs-interface\\\"><span class=\\\"hljs-keyword\\\">interface</span> Film </span>{\\n  id: <span class=\\\"hljs-built_in\\\">number</span>;\\n  title: <span class=\\\"hljs-built_in\\\">string</span>;\\n  release_date: <span class=\\\"hljs-built_in\\\">string</span>;\\n}\\n\\n<span class=\\\"hljs-keyword\\\">const</span> timezoneOffset = <span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>().getTimezoneOffset();\\n<span class=\\\"hljs-keyword\\\">const</span> hoursOffset = <span class=\\\"hljs-built_in\\\">String</span>(<span class=\\\"hljs-built_in\\\">Math</span>.floor(<span class=\\\"hljs-built_in\\\">Math</span>.abs(timezoneOffset / <span class=\\\"hljs-number\\\">60</span>))).padStart(\\n  <span class=\\\"hljs-number\\\">2</span>,\\n  <span class=\\\"hljs-string\\\">'0'</span>\\n);\\n<span class=\\\"hljs-keyword\\\">const</span> minutesOffset = <span class=\\\"hljs-built_in\\\">String</span>(<span class=\\\"hljs-built_in\\\">Math</span>.abs(timezoneOffset % <span class=\\\"hljs-number\\\">60</span>)).padEnd(<span class=\\\"hljs-number\\\">2</span>, <span class=\\\"hljs-string\\\">'0'</span>);\\n<span class=\\\"hljs-keyword\\\">const</span> direction = timezoneOffset &gt; <span class=\\\"hljs-number\\\">0</span> ? <span class=\\\"hljs-string\\\">'-'</span> : <span class=\\\"hljs-string\\\">'+'</span>;\\n<span class=\\\"hljs-keyword\\\">const</span> timezoneOffsetString = `T00:<span class=\\\"hljs-number\\\">00</span>:<span class=\\\"hljs-number\\\">00</span>${direction}${hoursOffset}${minutesOffset}`;\\n\\n@Component({\\n  selector: <span class=\\\"hljs-string\\\">'mwl-demo-component'</span>,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  templateUrl: <span class=\\\"hljs-string\\\">'template.html'</span>\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> DemoComponent <span class=\\\"hljs-keyword\\\">implements</span> OnInit {\\n  view: <span class=\\\"hljs-built_in\\\">string</span> = <span class=\\\"hljs-string\\\">'month'</span>;\\n\\n  viewDate: <span class=\\\"hljs-built_in\\\">Date</span> = <span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>();\\n\\n  events$: Observable&lt;<span class=\\\"hljs-built_in\\\">Array</span>&lt;CalendarEvent&lt;{ film: Film }&gt;&gt;&gt;;\\n\\n  activeDayIsOpen: <span class=\\\"hljs-built_in\\\">boolean</span> = <span class=\\\"hljs-literal\\\">false</span>;\\n\\n  <span class=\\\"hljs-constructor\\\"><span class=\\\"hljs-keyword\\\">constructor</span>(private http: HttpClient) </span>{}\\n\\n  ngOnInit(): <span class=\\\"hljs-built_in\\\">void</span> {\\n    <span class=\\\"hljs-keyword\\\">this</span>.fetchEvents();\\n  }\\n\\n  fetchEvents(): <span class=\\\"hljs-built_in\\\">void</span> {\\n    <span class=\\\"hljs-keyword\\\">const</span> getStart: <span class=\\\"hljs-built_in\\\">any</span> = {\\n      month: startOfMonth,\\n      week: startOfWeek,\\n      day: startOfDay\\n    }[<span class=\\\"hljs-keyword\\\">this</span>.view];\\n\\n    <span class=\\\"hljs-keyword\\\">const</span> getEnd: <span class=\\\"hljs-built_in\\\">any</span> = {\\n      month: endOfMonth,\\n      week: endOfWeek,\\n      day: endOfDay\\n    }[<span class=\\\"hljs-keyword\\\">this</span>.view];\\n\\n    <span class=\\\"hljs-keyword\\\">const</span> params = <span class=\\\"hljs-keyword\\\">new</span> HttpParams()\\n      .set(\\n        <span class=\\\"hljs-string\\\">'primary_release_date.gte'</span>,\\n        format(getStart(<span class=\\\"hljs-keyword\\\">this</span>.viewDate), <span class=\\\"hljs-string\\\">'YYYY-MM-DD'</span>)\\n      )\\n      .set(\\n        <span class=\\\"hljs-string\\\">'primary_release_date.lte'</span>,\\n        format(getEnd(<span class=\\\"hljs-keyword\\\">this</span>.viewDate), <span class=\\\"hljs-string\\\">'YYYY-MM-DD'</span>)\\n      )\\n      .set(<span class=\\\"hljs-string\\\">'api_key'</span>, <span class=\\\"hljs-string\\\">'0ec33936a68018857d727958dca1424f'</span>);\\n\\n    <span class=\\\"hljs-keyword\\\">this</span>.events$ = <span class=\\\"hljs-keyword\\\">this</span>.http\\n      .get(<span class=\\\"hljs-string\\\">'https://api.themoviedb.org/3/discover/movie'</span>, { params })\\n      .pipe(\\n        map(({ results }: { results: Film[] }) =&gt; {\\n          <span class=\\\"hljs-keyword\\\">return</span> results.map((film: Film) =&gt; {\\n            <span class=\\\"hljs-keyword\\\">return</span> {\\n              title: film.title,\\n              start: <span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>(film.release_date + timezoneOffsetString),\\n              color: colors.yellow,\\n              meta: {\\n                film\\n              }\\n            };\\n          });\\n        })\\n      );\\n  }\\n\\n  dayClicked({\\n    date,\\n    events\\n  }: {\\n    date: <span class=\\\"hljs-built_in\\\">Date</span>;\\n    events: <span class=\\\"hljs-built_in\\\">Array</span>&lt;CalendarEvent&lt;{ film: Film }&gt;&gt;;\\n  }): <span class=\\\"hljs-built_in\\\">void</span> {\\n    <span class=\\\"hljs-keyword\\\">if</span> (isSameMonth(date, <span class=\\\"hljs-keyword\\\">this</span>.viewDate)) {\\n      <span class=\\\"hljs-keyword\\\">if</span> (\\n        (isSameDay(<span class=\\\"hljs-keyword\\\">this</span>.viewDate, date) &amp;&amp; <span class=\\\"hljs-keyword\\\">this</span>.activeDayIsOpen === <span class=\\\"hljs-literal\\\">true</span>) ||\\n        events.length === <span class=\\\"hljs-number\\\">0</span>\\n      ) {\\n        <span class=\\\"hljs-keyword\\\">this</span>.activeDayIsOpen = <span class=\\\"hljs-literal\\\">false</span>;\\n      } <span class=\\\"hljs-keyword\\\">else</span> {\\n        <span class=\\\"hljs-keyword\\\">this</span>.activeDayIsOpen = <span class=\\\"hljs-literal\\\">true</span>;\\n        <span class=\\\"hljs-keyword\\\">this</span>.viewDate = date;\\n      }\\n    }\\n  }\\n\\n  eventClicked(event: CalendarEvent&lt;{ film: Film }&gt;): <span class=\\\"hljs-built_in\\\">void</span> {\\n    <span class=\\\"hljs-built_in\\\">window</span>.open(\\n      `https:<span class=\\\"hljs-comment\\\">//www.themoviedb.org/movie/${event.meta.film.id}`,</span>\\n      <span class=\\\"hljs-string\\\">'_blank'</span>\\n    );\\n  }\\n}\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { NgModule } from <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { CommonModule } from <span class=\\\"hljs-string\\\">'@angular/common'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { HttpClientModule } from <span class=\\\"hljs-string\\\">'@angular/common/http'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { RouterModule } from <span class=\\\"hljs-string\\\">'@angular/router'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { CalendarModule, DateAdapter } from <span class=\\\"hljs-string\\\">'angular-calendar'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { DemoUtilsModule } from <span class=\\\"hljs-string\\\">'../demo-utils/module'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { DemoComponent } from <span class=\\\"hljs-string\\\">'./component'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { adapterFactory } from <span class=\\\"hljs-string\\\">'angular-calendar/date-adapters/date-fns'</span>;\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    HttpClientModule,\\n    CalendarModule.forRoot({\\n      provide: DateAdapter,\\n      useFactory: adapterFactory\\n    }),\\n    DemoUtilsModule,\\n    RouterModule.forChild([{ path: <span class=\\\"hljs-string\\\">''</span>, component: DemoComponent }])\\n  ],\\n  declarations: [DemoComponent],\\n  exports: [DemoComponent]\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> DemoModule {}\\n\"","module.exports = \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-demo-utils-calendar-header</span>\\n  [(<span class=\\\"hljs-attribute\\\">view</span>)]=<span class=\\\"hljs-value\\\">\\\"view\\\"</span>\\n  [(<span class=\\\"hljs-attribute\\\">viewDate</span>)]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>\\n  (<span class=\\\"hljs-attribute\\\">viewDateChange</span>)=<span class=\\\"hljs-value\\\">\\\"fetchEvents()\\\"</span>\\n  (<span class=\\\"hljs-attribute\\\">viewChange</span>)=<span class=\\\"hljs-value\\\">\\\"fetchEvents()\\\"</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-demo-utils-calendar-header</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">ng-template</span> #<span class=\\\"hljs-attribute\\\">loading</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">div</span> <span class=\\\"hljs-attribute\\\">class</span>=<span class=\\\"hljs-value\\\">\\\"text-center\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">i</span> <span class=\\\"hljs-attribute\\\">class</span>=<span class=\\\"hljs-value\\\">\\\"fa fa-spin fa-spinner fa-5x\\\"</span>&gt;</span><span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">i</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">br</span>&gt;</span>\\n    Loading events...\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">ng-template</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">div</span> *<span class=\\\"hljs-attribute\\\">ngIf</span>=<span class=\\\"hljs-value\\\">\\\"events$ | async; else loading; let events\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">div</span> [<span class=\\\"hljs-attribute\\\">ngSwitch</span>]=<span class=\\\"hljs-value\\\">\\\"view\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-calendar-month-view</span>\\n      *<span class=\\\"hljs-attribute\\\">ngSwitchCase</span>=<span class=\\\"hljs-value\\\">\\\"'month'\\\"</span>\\n      [<span class=\\\"hljs-attribute\\\">viewDate</span>]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>\\n      [<span class=\\\"hljs-attribute\\\">events</span>]=<span class=\\\"hljs-value\\\">\\\"events\\\"</span>\\n      [<span class=\\\"hljs-attribute\\\">activeDayIsOpen</span>]=<span class=\\\"hljs-value\\\">\\\"activeDayIsOpen\\\"</span>\\n      (<span class=\\\"hljs-attribute\\\">dayClicked</span>)=<span class=\\\"hljs-value\\\">\\\"dayClicked($event.day)\\\"</span>\\n      (<span class=\\\"hljs-attribute\\\">eventClicked</span>)=<span class=\\\"hljs-value\\\">\\\"eventClicked($event.event)\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-calendar-month-view</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-calendar-week-view</span>\\n      *<span class=\\\"hljs-attribute\\\">ngSwitchCase</span>=<span class=\\\"hljs-value\\\">\\\"'week'\\\"</span>\\n      [<span class=\\\"hljs-attribute\\\">viewDate</span>]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>\\n      [<span class=\\\"hljs-attribute\\\">events</span>]=<span class=\\\"hljs-value\\\">\\\"events\\\"</span>\\n      (<span class=\\\"hljs-attribute\\\">eventClicked</span>)=<span class=\\\"hljs-value\\\">\\\"eventClicked($event.event)\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-calendar-week-view</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-calendar-day-view</span>\\n      *<span class=\\\"hljs-attribute\\\">ngSwitchCase</span>=<span class=\\\"hljs-value\\\">\\\"'day'\\\"</span>\\n      [<span class=\\\"hljs-attribute\\\">viewDate</span>]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>\\n      [<span class=\\\"hljs-attribute\\\">events</span>]=<span class=\\\"hljs-value\\\">\\\"events\\\"</span>\\n      (<span class=\\\"hljs-attribute\\\">eventClicked</span>)=<span class=\\\"hljs-value\\\">\\\"eventClicked($event.event)\\\"</span>&gt;</span>\\n    <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-calendar-day-view</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">div</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">div</span>&gt;</span>\"","module.exports = \"import { Component, ChangeDetectionStrategy, OnInit } from '@angular/core';\\nimport { HttpClient, HttpParams } from '@angular/common/http';\\nimport { map } from 'rxjs/operators';\\nimport { CalendarEvent } from 'angular-calendar';\\nimport {\\n  isSameMonth,\\n  isSameDay,\\n  startOfMonth,\\n  endOfMonth,\\n  startOfWeek,\\n  endOfWeek,\\n  startOfDay,\\n  endOfDay,\\n  format\\n} from 'date-fns';\\nimport { Observable } from 'rxjs';\\nimport { colors } from '../demo-utils/colors';\\n\\ninterface Film {\\n  id: number;\\n  title: string;\\n  release_date: string;\\n}\\n\\nconst timezoneOffset = new Date().getTimezoneOffset();\\nconst hoursOffset = String(Math.floor(Math.abs(timezoneOffset / 60))).padStart(\\n  2,\\n  '0'\\n);\\nconst minutesOffset = String(Math.abs(timezoneOffset % 60)).padEnd(2, '0');\\nconst direction = timezoneOffset > 0 ? '-' : '+';\\nconst timezoneOffsetString = `T00:00:00${direction}${hoursOffset}${minutesOffset}`;\\n\\n@Component({\\n  selector: 'mwl-demo-component',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  templateUrl: 'template.html'\\n})\\nexport class DemoComponent implements OnInit {\\n  view: string = 'month';\\n\\n  viewDate: Date = new Date();\\n\\n  events$: Observable<Array<CalendarEvent<{ film: Film }>>>;\\n\\n  activeDayIsOpen: boolean = false;\\n\\n  constructor(private http: HttpClient) {}\\n\\n  ngOnInit(): void {\\n    this.fetchEvents();\\n  }\\n\\n  fetchEvents(): void {\\n    const getStart: any = {\\n      month: startOfMonth,\\n      week: startOfWeek,\\n      day: startOfDay\\n    }[this.view];\\n\\n    const getEnd: any = {\\n      month: endOfMonth,\\n      week: endOfWeek,\\n      day: endOfDay\\n    }[this.view];\\n\\n    const params = new HttpParams()\\n      .set(\\n        'primary_release_date.gte',\\n        format(getStart(this.viewDate), 'YYYY-MM-DD')\\n      )\\n      .set(\\n        'primary_release_date.lte',\\n        format(getEnd(this.viewDate), 'YYYY-MM-DD')\\n      )\\n      .set('api_key', '0ec33936a68018857d727958dca1424f');\\n\\n    this.events$ = this.http\\n      .get('https://api.themoviedb.org/3/discover/movie', { params })\\n      .pipe(\\n        map(({ results }: { results: Film[] }) => {\\n          return results.map((film: Film) => {\\n            return {\\n              title: film.title,\\n              start: new Date(film.release_date + timezoneOffsetString),\\n              color: colors.yellow,\\n              meta: {\\n                film\\n              }\\n            };\\n          });\\n        })\\n      );\\n  }\\n\\n  dayClicked({\\n    date,\\n    events\\n  }: {\\n    date: Date;\\n    events: Array<CalendarEvent<{ film: Film }>>;\\n  }): void {\\n    if (isSameMonth(date, this.viewDate)) {\\n      if (\\n        (isSameDay(this.viewDate, date) && this.activeDayIsOpen === true) ||\\n        events.length === 0\\n      ) {\\n        this.activeDayIsOpen = false;\\n      } else {\\n        this.activeDayIsOpen = true;\\n        this.viewDate = date;\\n      }\\n    }\\n  }\\n\\n  eventClicked(event: CalendarEvent<{ film: Film }>): void {\\n    window.open(\\n      `https://www.themoviedb.org/movie/${event.meta.film.id}`,\\n      '_blank'\\n    );\\n  }\\n}\\n\"","module.exports = \"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { HttpClientModule } from '@angular/common/http';\\nimport { RouterModule } from '@angular/router';\\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\\nimport { DemoUtilsModule } from '../demo-utils/module';\\nimport { DemoComponent } from './component';\\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    HttpClientModule,\\n    CalendarModule.forRoot({\\n      provide: DateAdapter,\\n      useFactory: adapterFactory\\n    }),\\n    DemoUtilsModule,\\n    RouterModule.forChild([{ path: '', component: DemoComponent }])\\n  ],\\n  declarations: [DemoComponent],\\n  exports: [DemoComponent]\\n})\\nexport class DemoModule {}\\n\"","export const sources = [\n  {\n    filename: 'component.ts',\n    contents: {\n      raw: require('!!raw-loader!./component'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=typescript!./component')\n    }\n  },\n  {\n    filename: 'template.html',\n    contents: {\n      raw: require('!!raw-loader!./template.html'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=xml!./template.html')\n    }\n  },\n  {\n    filename: 'module.ts',\n    contents: {\n      raw: require('!!raw-loader!./module'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=typescript!./module')\n    }\n  }\n];\n"],"sourceRoot":""}