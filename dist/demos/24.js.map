{"version":3,"sources":["webpack:///./src/app/demo-modules/month-view-badge-total/component.ts?030b","webpack:///./src/app/demo-modules/month-view-badge-total/module.ts?1beb","webpack:///./src/app/demo-modules/month-view-badge-total/template.html?8dc5","webpack:///./src/app/demo-modules/month-view-badge-total/component.ts?227f","webpack:///./src/app/demo-modules/month-view-badge-total/module.ts?af85","webpack:///./src/app/demo-modules/month-view-badge-total/sources.ts"],"names":[],"mappings":";;;;;;;;;AAAA,8DAA8D,qCAAqC,yDAAyD,8CAA8C,sCAAsC,4DAA4D,8CAA8C,SAAS,gEAAgE,gBAAgB,gMAAgM,uGAAuG,8IAA8I,4DAA4D,kBAAkB,qEAAqE,IAAI,IAAI,WAAW,0OAA0O,iFAAiF,OAAO,QAAQ,oPAAoP,kFAAkF,OAAO,MAAM,6BAA6B,OAAO,GAAG,+BAA+B,8CAA8C,4BAA4B,EAAE,gEAAgE,iDAAiD,OAAO,EAAE,KAAK,GAAG,G;;;;;;;;;;;ACA/7D,8DAA8D,WAAW,yDAAyD,8CAA8C,eAAe,2DAA2D,8CAA8C,eAAe,2DAA2D,8CAA8C,8BAA8B,4DAA4D,8CAA8C,kBAAkB,gEAAgE,8CAA8C,gBAAgB,uDAAuD,8CAA8C,iBAAiB,mFAAmF,eAAe,+DAA+D,sEAAsE,sDAAsD,wEAAwE,yEAAyE,qGAAqG,G;;;;;;;;;;;ACAj0C,+CAA+C,qeAAqe,sCAAsC,8DAA8D,Q;;;;;;;;;;;ACAxnB,0BAA0B,qCAAqC,sBAAsB,UAAU,sCAAsC,yBAAyB,UAAU,SAAS,6BAA6B,gBAAgB,0HAA0H,+BAA+B,gCAAgC,mCAAmC,gCAAgC,aAAa,8HAA8H,6CAA6C,OAAO,QAAQ,wIAAwI,8CAA8C,OAAO,MAAM,6BAA6B,OAAO,GAAG,+BAA+B,SAAS,2BAA2B,8GAA8G,OAAO,EAAE,KAAK,GAAG,G;;;;;;;;;;;ACA7kC,0BAA0B,WAAW,sBAAsB,UAAU,eAAe,wBAAwB,UAAU,eAAe,wBAAwB,UAAU,8BAA8B,yBAAyB,UAAU,kBAAkB,6BAA6B,UAAU,gBAAgB,oBAAoB,UAAU,iBAAiB,gDAAgD,eAAe,+DAA+D,sEAAsE,sDAAsD,qCAAqC,yEAAyE,6BAA6B,G;;;;;;;;;;;;ACAruB;AAAA;AAAO,IAAM,OAAO,GAAG;IACrB;QACE,QAAQ,EAAE,cAAc;QACxB,QAAQ,EAAE;YACR,GAAG,EAAE,mBAAO,CAAC,8HAA0B,CAAC;YACxC,WAAW,EAAE,mBAAO,CAAC,4NAA6D,CAAC;SACpF;KACF;IACD;QACE,QAAQ,EAAE,eAAe;QACzB,QAAQ,EAAE;YACR,GAAG,EAAE,mBAAO,CAAC,mIAA8B,CAAC;YAC5C,WAAW,EAAE,mBAAO,CAAC,mNAA0D,CAAC;SACjF;KACF;IACD;QACE,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE;YACR,GAAG,EAAE,mBAAO,CAAC,wHAAuB,CAAC;YACrC,WAAW,EAAE,mBAAO,CAAC,sNAA0D,CAAC;SACjF;KACF;CACF,CAAC","file":"24.js","sourcesContent":["module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { Component, ChangeDetectionStrategy } from <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { CalendarEvent, CalendarMonthViewDay } from <span class=\\\"hljs-string\\\">'angular-calendar'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { colors } from <span class=\\\"hljs-string\\\">'../demo-utils/colors'</span>;\\n\\n@Component({\\n  selector: <span class=\\\"hljs-string\\\">'mwl-demo-component'</span>,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  templateUrl: <span class=\\\"hljs-string\\\">'template.html'</span>\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> DemoComponent {\\n  viewDate: <span class=\\\"hljs-built_in\\\">Date</span> = <span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>();\\n\\n  events: <span class=\\\"hljs-built_in\\\">Array</span>&lt;CalendarEvent&lt;{ incrementsBadgeTotal: <span class=\\\"hljs-built_in\\\">boolean</span> }&gt;&gt; = [\\n    {\\n      title: <span class=\\\"hljs-string\\\">'Increments badge total on the day cell'</span>,\\n      color: colors.yellow,\\n      start: <span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>(),\\n      meta: {\\n        incrementsBadgeTotal: <span class=\\\"hljs-literal\\\">true</span>\\n      }\\n    },\\n    {\\n      title: <span class=\\\"hljs-string\\\">'Does not increment the badge total on the day cell'</span>,\\n      color: colors.blue,\\n      start: <span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>(),\\n      meta: {\\n        incrementsBadgeTotal: <span class=\\\"hljs-literal\\\">false</span>\\n      }\\n    }\\n  ];\\n\\n  beforeMonthViewRender({ body }: { body: CalendarMonthViewDay[] }): <span class=\\\"hljs-built_in\\\">void</span> {\\n    body.forEach(day =&gt; {\\n      day.badgeTotal = day.events.filter(\\n        event =&gt; event.meta.incrementsBadgeTotal\\n      ).length;\\n    });\\n  }\\n}\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { NgModule } from <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { CommonModule } from <span class=\\\"hljs-string\\\">'@angular/common'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { RouterModule } from <span class=\\\"hljs-string\\\">'@angular/router'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { CalendarModule, DateAdapter } from <span class=\\\"hljs-string\\\">'angular-calendar'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { DemoUtilsModule } from <span class=\\\"hljs-string\\\">'../demo-utils/module'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { DemoComponent } from <span class=\\\"hljs-string\\\">'./component'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { adapterFactory } from <span class=\\\"hljs-string\\\">'angular-calendar/date-adapters/date-fns'</span>;\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    CalendarModule.forRoot({\\n      provide: DateAdapter,\\n      useFactory: adapterFactory\\n    }),\\n    DemoUtilsModule,\\n    RouterModule.forChild([{ path: <span class=\\\"hljs-string\\\">''</span>, component: DemoComponent }])\\n  ],\\n  declarations: [DemoComponent],\\n  exports: [DemoComponent]\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> DemoModule {}\\n\"","module.exports = \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-calendar-month-view</span>\\n  [<span class=\\\"hljs-attribute\\\">viewDate</span>]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>\\n  [<span class=\\\"hljs-attribute\\\">events</span>]=<span class=\\\"hljs-value\\\">\\\"events\\\"</span>\\n  [<span class=\\\"hljs-attribute\\\">activeDayIsOpen</span>]=<span class=\\\"hljs-value\\\">\\\"true\\\"</span>\\n  (<span class=\\\"hljs-attribute\\\">beforeViewRender</span>)=<span class=\\\"hljs-value\\\">\\\"beforeMonthViewRender($event)\\\"</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-calendar-month-view</span>&gt;</span>\"","module.exports = \"import { Component, ChangeDetectionStrategy } from '@angular/core';\\nimport { CalendarEvent, CalendarMonthViewDay } from 'angular-calendar';\\nimport { colors } from '../demo-utils/colors';\\n\\n@Component({\\n  selector: 'mwl-demo-component',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  templateUrl: 'template.html'\\n})\\nexport class DemoComponent {\\n  viewDate: Date = new Date();\\n\\n  events: Array<CalendarEvent<{ incrementsBadgeTotal: boolean }>> = [\\n    {\\n      title: 'Increments badge total on the day cell',\\n      color: colors.yellow,\\n      start: new Date(),\\n      meta: {\\n        incrementsBadgeTotal: true\\n      }\\n    },\\n    {\\n      title: 'Does not increment the badge total on the day cell',\\n      color: colors.blue,\\n      start: new Date(),\\n      meta: {\\n        incrementsBadgeTotal: false\\n      }\\n    }\\n  ];\\n\\n  beforeMonthViewRender({ body }: { body: CalendarMonthViewDay[] }): void {\\n    body.forEach(day => {\\n      day.badgeTotal = day.events.filter(\\n        event => event.meta.incrementsBadgeTotal\\n      ).length;\\n    });\\n  }\\n}\\n\"","module.exports = \"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { RouterModule } from '@angular/router';\\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\\nimport { DemoUtilsModule } from '../demo-utils/module';\\nimport { DemoComponent } from './component';\\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    CalendarModule.forRoot({\\n      provide: DateAdapter,\\n      useFactory: adapterFactory\\n    }),\\n    DemoUtilsModule,\\n    RouterModule.forChild([{ path: '', component: DemoComponent }])\\n  ],\\n  declarations: [DemoComponent],\\n  exports: [DemoComponent]\\n})\\nexport class DemoModule {}\\n\"","export const sources = [\n  {\n    filename: 'component.ts',\n    contents: {\n      raw: require('!!raw-loader!./component'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=typescript!./component')\n    }\n  },\n  {\n    filename: 'template.html',\n    contents: {\n      raw: require('!!raw-loader!./template.html'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=xml!./template.html')\n    }\n  },\n  {\n    filename: 'module.ts',\n    contents: {\n      raw: require('!!raw-loader!./module'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=typescript!./module')\n    }\n  }\n];\n"],"sourceRoot":""}