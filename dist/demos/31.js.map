{"version":3,"sources":["webpack:///./src/app/demo-modules/selectable-period/component.ts?f2b1","webpack:///./src/app/demo-modules/selectable-period/module.ts?267c","webpack:///./src/app/demo-modules/selectable-period/template.html?e0ec","webpack:///./src/app/demo-modules/selectable-period/component.ts?f849","webpack:///./src/app/demo-modules/selectable-period/module.ts?ddc0","webpack:///./src/app/demo-modules/selectable-period/sources.ts"],"names":[],"mappings":";;;;;;;;;AAAA,8DAA8D,kEAAkE,yDAAyD,8CAA8C,sCAAsC,4DAA4D,8CAA8C,cAAc,0DAA0D,gBAAgB,8XAA8X,gDAAgD,SAAS,yDAAyD,uGAAuG,sDAAsD,gJAAgJ,iDAAiD,qEAAqE,6BAA6B,mCAAmC,kEAAkE,wFAAwF,0EAA0E,gJAAgJ,qJAAqJ,wDAAwD,4DAA4D,yCAAyC,0HAA0H,sHAAsH,OAAO,2CAA2C,kIAAkI,6EAA6E,4EAA4E,OAAO,KAAK,6BAA6B,OAAO,GAAG,+BAA+B,8CAA8C,4BAA4B,EAAE,kJAAkJ,wEAAwE,+EAA+E,SAAS,OAAO,EAAE,KAAK,2EAA2E,0EAA0E,yEAAyE,KAAK,mDAAmD,iEAAiE,yEAAyE,KAAK,6EAA6E,gFAAgF,EAAE,kDAAkD,EAAE,sEAAsE,gIAAgI,KAAK,0HAA0H,qFAAqF,WAAW,SAAS,EAAE,OAAO,EAAE,KAAK,GAAG,G;;;;;;;;;;;ACA5pI,8DAA8D,WAAW,yDAAyD,8CAA8C,eAAe,2DAA2D,8CAA8C,eAAe,2DAA2D,8CAA8C,8BAA8B,4DAA4D,8CAA8C,kBAAkB,gEAAgE,8CAA8C,gBAAgB,uDAAuD,8CAA8C,iBAAiB,mFAAmF,eAAe,+DAA+D,sEAAsE,sDAAsD,wEAAwE,yEAAyE,qGAAqG,G;;;;;;;;;;;ACAj0C,+CAA+C,sQAAsQ,sCAAsC,qEAAqE,wCAAwC,4IAA4I,6FAA6F,0CAA0C,wCAAwC,qIAAqI,wCAAwC,imBAAimB,wCAAwC,8DAA8D,wCAAwC,wWAAwW,wCAAwC,6DAA6D,wCAAwC,0nBAA0nB,wCAAwC,4DAA4D,sCAAsC,0CAA0C,U;;;;;;;;;;;ACAl8F,0BAA0B,kEAAkE,sBAAsB,UAAU,sCAAsC,yBAAyB,UAAU,cAAc,uBAAuB,gBAAgB,oRAAoR,gDAAgD,SAAS,yDAAyD,+BAA+B,mBAAmB,kCAAkC,iDAAiD,gCAAgC,6BAA6B,mCAAmC,6BAA6B,mDAAmD,sCAAsC,wEAAwE,kIAAkI,2BAA2B,kDAAkD,+CAA+C,OAAO,OAAO,0DAA0D,0CAA0C,wCAAwC,OAAO,KAAK,6BAA6B,OAAO,GAAG,+BAA+B,SAAS,2BAA2B,+IAA+I,4CAA4C,SAAS,OAAO,EAAE,KAAK,sCAAsC,sCAAsC,qCAAqC,KAAK,mDAAmD,6BAA6B,qCAAqC,KAAK,yCAAyC,2CAA2C,iDAAiD,kCAAkC,2IAA2I,kDAAkD,WAAW,SAAS,EAAE,OAAO,EAAE,KAAK,GAAG,G;;;;;;;;;;;ACA93E,0BAA0B,WAAW,sBAAsB,UAAU,eAAe,wBAAwB,UAAU,eAAe,wBAAwB,UAAU,8BAA8B,yBAAyB,UAAU,kBAAkB,6BAA6B,UAAU,gBAAgB,oBAAoB,UAAU,iBAAiB,gDAAgD,eAAe,+DAA+D,sEAAsE,sDAAsD,qCAAqC,yEAAyE,6BAA6B,G;;;;;;;;;;;;ACAruB;AAAA;AAAO,IAAM,OAAO,GAAG;IACrB;QACE,QAAQ,EAAE,cAAc;QACxB,QAAQ,EAAE;YACR,GAAG,EAAE,mBAAO,CAAC,yHAA0B,CAAC;YACxC,WAAW,EAAE,mBAAO,CAAC,uNAA6D,CAAC;SACpF;KACF;IACD;QACE,QAAQ,EAAE,eAAe;QACzB,QAAQ,EAAE;YACR,GAAG,EAAE,mBAAO,CAAC,8HAA8B,CAAC;YAC5C,WAAW,EAAE,mBAAO,CAAC,8MAA0D,CAAC;SACjF;KACF;IACD;QACE,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE;YACR,GAAG,EAAE,mBAAO,CAAC,mHAAuB,CAAC;YACrC,WAAW,EAAE,mBAAO,CAAC,iNAA0D,CAAC;SACjF;KACF;CACF,CAAC","file":"31.js","sourcesContent":["module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> {\\n  Component,\\n  ChangeDetectionStrategy,\\n  ViewEncapsulation\\n} from <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { CalendarEvent, CalendarMonthViewDay } from <span class=\\\"hljs-string\\\">'angular-calendar'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { DayViewHour } from <span class=\\\"hljs-string\\\">'calendar-utils'</span>;\\n\\n@Component({\\n  selector: <span class=\\\"hljs-string\\\">'mwl-demo-component'</span>,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  templateUrl: <span class=\\\"hljs-string\\\">'template.html'</span>,\\n  <span class=\\\"hljs-comment\\\">// don't do this in your app, its only so the styles get applied globally</span>\\n  styles: [\\n    `\\n      .cal-day-selected,\\n      .cal-day-selected:hover {\\n        background-color: deeppink !important;\\n      }\\n    `\\n  ],\\n  encapsulation: ViewEncapsulation.None\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> DemoComponent {\\n  view = <span class=\\\"hljs-string\\\">'month'</span>;\\n\\n  viewDate: <span class=\\\"hljs-built_in\\\">Date</span> = <span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>();\\n\\n  selectedMonthViewDay: CalendarMonthViewDay;\\n\\n  selectedDayViewDate: <span class=\\\"hljs-built_in\\\">Date</span>;\\n\\n  dayView: DayViewHour[];\\n\\n  events: CalendarEvent[] = [];\\n\\n  selectedDays: <span class=\\\"hljs-built_in\\\">any</span> = [];\\n\\n  dayClicked(day: CalendarMonthViewDay): <span class=\\\"hljs-built_in\\\">void</span> {\\n    <span class=\\\"hljs-keyword\\\">this</span>.selectedMonthViewDay = day;\\n    <span class=\\\"hljs-keyword\\\">const</span> selectedDateTime = <span class=\\\"hljs-keyword\\\">this</span>.selectedMonthViewDay.date.getTime();\\n    <span class=\\\"hljs-keyword\\\">const</span> dateIndex = <span class=\\\"hljs-keyword\\\">this</span>.selectedDays.findIndex(\\n      selectedDay =&gt; selectedDay.date.getTime() === selectedDateTime\\n    );\\n    <span class=\\\"hljs-keyword\\\">if</span> (dateIndex &gt; -<span class=\\\"hljs-number\\\">1</span>) {\\n      <span class=\\\"hljs-keyword\\\">delete</span> <span class=\\\"hljs-keyword\\\">this</span>.selectedMonthViewDay.cssClass;\\n      <span class=\\\"hljs-keyword\\\">this</span>.selectedDays.splice(dateIndex, <span class=\\\"hljs-number\\\">1</span>);\\n    } <span class=\\\"hljs-keyword\\\">else</span> {\\n      <span class=\\\"hljs-keyword\\\">this</span>.selectedDays.push(<span class=\\\"hljs-keyword\\\">this</span>.selectedMonthViewDay);\\n      day.cssClass = <span class=\\\"hljs-string\\\">'cal-day-selected'</span>;\\n      <span class=\\\"hljs-keyword\\\">this</span>.selectedMonthViewDay = day;\\n    }\\n  }\\n\\n  beforeMonthViewRender({ body }: { body: CalendarMonthViewDay[] }): <span class=\\\"hljs-built_in\\\">void</span> {\\n    body.forEach(day =&gt; {\\n      <span class=\\\"hljs-keyword\\\">if</span> (\\n        <span class=\\\"hljs-keyword\\\">this</span>.selectedDays.some(\\n          selectedDay =&gt; selectedDay.date.getTime() === day.date.getTime()\\n        )\\n      ) {\\n        day.cssClass = <span class=\\\"hljs-string\\\">'cal-day-selected'</span>;\\n      }\\n    });\\n  }\\n\\n  hourSegmentClicked(date: <span class=\\\"hljs-built_in\\\">Date</span>) {\\n    <span class=\\\"hljs-keyword\\\">this</span>.selectedDayViewDate = date;\\n    <span class=\\\"hljs-keyword\\\">this</span>.addSelectedDayViewClass();\\n  }\\n\\n  beforeDayViewRender(dayView: DayViewHour[]) {\\n    <span class=\\\"hljs-keyword\\\">this</span>.dayView = dayView;\\n    <span class=\\\"hljs-keyword\\\">this</span>.addSelectedDayViewClass();\\n  }\\n\\n  <span class=\\\"hljs-keyword\\\">private</span> addSelectedDayViewClass() {\\n    <span class=\\\"hljs-keyword\\\">this</span>.dayView.forEach(hourSegment =&gt; {\\n      hourSegment.segments.forEach(segment =&gt; {\\n        <span class=\\\"hljs-keyword\\\">delete</span> segment.cssClass;\\n        <span class=\\\"hljs-keyword\\\">if</span> (\\n          <span class=\\\"hljs-keyword\\\">this</span>.selectedDayViewDate &amp;&amp;\\n          segment.date.getTime() === <span class=\\\"hljs-keyword\\\">this</span>.selectedDayViewDate.getTime()\\n        ) {\\n          segment.cssClass = <span class=\\\"hljs-string\\\">'cal-day-selected'</span>;\\n        }\\n      });\\n    });\\n  }\\n}\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { NgModule } from <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { CommonModule } from <span class=\\\"hljs-string\\\">'@angular/common'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { RouterModule } from <span class=\\\"hljs-string\\\">'@angular/router'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { CalendarModule, DateAdapter } from <span class=\\\"hljs-string\\\">'angular-calendar'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { DemoUtilsModule } from <span class=\\\"hljs-string\\\">'../demo-utils/module'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { DemoComponent } from <span class=\\\"hljs-string\\\">'./component'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { adapterFactory } from <span class=\\\"hljs-string\\\">'angular-calendar/date-adapters/date-fns'</span>;\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    CalendarModule.forRoot({\\n      provide: DateAdapter,\\n      useFactory: adapterFactory\\n    }),\\n    DemoUtilsModule,\\n    RouterModule.forChild([{ path: <span class=\\\"hljs-string\\\">''</span>, component: DemoComponent }])\\n  ],\\n  declarations: [DemoComponent],\\n  exports: [DemoComponent]\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> DemoModule {}\\n\"","module.exports = \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-demo-utils-calendar-header</span>\\n  [(<span class=\\\"hljs-attribute\\\">view</span>)]=<span class=\\\"hljs-value\\\">\\\"view\\\"</span>\\n  [(<span class=\\\"hljs-attribute\\\">viewDate</span>)]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-demo-utils-calendar-header</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">div</span> <span class=\\\"hljs-attribute\\\">class</span>=<span class=\\\"hljs-value\\\">\\\"alert alert-info\\\"</span>&gt;</span>Click on a month view day or a day view hour to select it<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">div</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">div</span> [<span class=\\\"hljs-attribute\\\">ngSwitch</span>]=<span class=\\\"hljs-value\\\">\\\"view\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-calendar-month-view</span>\\n    *<span class=\\\"hljs-attribute\\\">ngSwitchCase</span>=<span class=\\\"hljs-value\\\">\\\"'month'\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">viewDate</span>]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">events</span>]=<span class=\\\"hljs-value\\\">\\\"events\\\"</span>\\n    (<span class=\\\"hljs-attribute\\\">beforeViewRender</span>)=<span class=\\\"hljs-value\\\">\\\"beforeMonthViewRender($event)\\\"</span>\\n    (<span class=\\\"hljs-attribute\\\">dayClicked</span>)=<span class=\\\"hljs-value\\\">\\\"dayClicked($event.day)\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-calendar-month-view</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-calendar-week-view</span>\\n    *<span class=\\\"hljs-attribute\\\">ngSwitchCase</span>=<span class=\\\"hljs-value\\\">\\\"'week'\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">viewDate</span>]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">events</span>]=<span class=\\\"hljs-value\\\">\\\"events\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-calendar-week-view</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-calendar-day-view</span>\\n    *<span class=\\\"hljs-attribute\\\">ngSwitchCase</span>=<span class=\\\"hljs-value\\\">\\\"'day'\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">viewDate</span>]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">events</span>]=<span class=\\\"hljs-value\\\">\\\"events\\\"</span>\\n    (<span class=\\\"hljs-attribute\\\">beforeViewRender</span>)=<span class=\\\"hljs-value\\\">\\\"beforeDayViewRender($event.body.hourGrid)\\\"</span>\\n    (<span class=\\\"hljs-attribute\\\">hourSegmentClicked</span>)=<span class=\\\"hljs-value\\\">\\\"hourSegmentClicked($event.date)\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-calendar-day-view</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">div</span>&gt;</span>\\n\"","module.exports = \"import {\\n  Component,\\n  ChangeDetectionStrategy,\\n  ViewEncapsulation\\n} from '@angular/core';\\nimport { CalendarEvent, CalendarMonthViewDay } from 'angular-calendar';\\nimport { DayViewHour } from 'calendar-utils';\\n\\n@Component({\\n  selector: 'mwl-demo-component',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  templateUrl: 'template.html',\\n  // don't do this in your app, its only so the styles get applied globally\\n  styles: [\\n    `\\n      .cal-day-selected,\\n      .cal-day-selected:hover {\\n        background-color: deeppink !important;\\n      }\\n    `\\n  ],\\n  encapsulation: ViewEncapsulation.None\\n})\\nexport class DemoComponent {\\n  view = 'month';\\n\\n  viewDate: Date = new Date();\\n\\n  selectedMonthViewDay: CalendarMonthViewDay;\\n\\n  selectedDayViewDate: Date;\\n\\n  dayView: DayViewHour[];\\n\\n  events: CalendarEvent[] = [];\\n\\n  selectedDays: any = [];\\n\\n  dayClicked(day: CalendarMonthViewDay): void {\\n    this.selectedMonthViewDay = day;\\n    const selectedDateTime = this.selectedMonthViewDay.date.getTime();\\n    const dateIndex = this.selectedDays.findIndex(\\n      selectedDay => selectedDay.date.getTime() === selectedDateTime\\n    );\\n    if (dateIndex > -1) {\\n      delete this.selectedMonthViewDay.cssClass;\\n      this.selectedDays.splice(dateIndex, 1);\\n    } else {\\n      this.selectedDays.push(this.selectedMonthViewDay);\\n      day.cssClass = 'cal-day-selected';\\n      this.selectedMonthViewDay = day;\\n    }\\n  }\\n\\n  beforeMonthViewRender({ body }: { body: CalendarMonthViewDay[] }): void {\\n    body.forEach(day => {\\n      if (\\n        this.selectedDays.some(\\n          selectedDay => selectedDay.date.getTime() === day.date.getTime()\\n        )\\n      ) {\\n        day.cssClass = 'cal-day-selected';\\n      }\\n    });\\n  }\\n\\n  hourSegmentClicked(date: Date) {\\n    this.selectedDayViewDate = date;\\n    this.addSelectedDayViewClass();\\n  }\\n\\n  beforeDayViewRender(dayView: DayViewHour[]) {\\n    this.dayView = dayView;\\n    this.addSelectedDayViewClass();\\n  }\\n\\n  private addSelectedDayViewClass() {\\n    this.dayView.forEach(hourSegment => {\\n      hourSegment.segments.forEach(segment => {\\n        delete segment.cssClass;\\n        if (\\n          this.selectedDayViewDate &&\\n          segment.date.getTime() === this.selectedDayViewDate.getTime()\\n        ) {\\n          segment.cssClass = 'cal-day-selected';\\n        }\\n      });\\n    });\\n  }\\n}\\n\"","module.exports = \"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { RouterModule } from '@angular/router';\\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\\nimport { DemoUtilsModule } from '../demo-utils/module';\\nimport { DemoComponent } from './component';\\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    CalendarModule.forRoot({\\n      provide: DateAdapter,\\n      useFactory: adapterFactory\\n    }),\\n    DemoUtilsModule,\\n    RouterModule.forChild([{ path: '', component: DemoComponent }])\\n  ],\\n  declarations: [DemoComponent],\\n  exports: [DemoComponent]\\n})\\nexport class DemoModule {}\\n\"","export const sources = [\n  {\n    filename: 'component.ts',\n    contents: {\n      raw: require('!!raw-loader!./component'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=typescript!./component')\n    }\n  },\n  {\n    filename: 'template.html',\n    contents: {\n      raw: require('!!raw-loader!./template.html'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=xml!./template.html')\n    }\n  },\n  {\n    filename: 'module.ts',\n    contents: {\n      raw: require('!!raw-loader!./module'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=typescript!./module')\n    }\n  }\n];\n"],"sourceRoot":""}