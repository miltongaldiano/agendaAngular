{"version":3,"sources":["webpack:///./src/app/demo-modules/refreshing-the-view/component.ts?e1ab","webpack:///./src/app/demo-modules/refreshing-the-view/module.ts?0738","webpack:///./src/app/demo-modules/refreshing-the-view/template.html?2af0","webpack:///./src/app/demo-modules/refreshing-the-view/component.ts?8b3b","webpack:///./src/app/demo-modules/refreshing-the-view/module.ts?d553","webpack:///./src/app/demo-modules/refreshing-the-view/sources.ts"],"names":[],"mappings":";;;;;;;;;AAAA,8DAA8D,kEAAkE,yDAAyD,8CAA8C,sCAAsC,4DAA4D,8CAA8C,UAAU,gDAAgD,sJAAsJ,uJAAuJ,gBAAgB,+QAA+Q,2CAA2C,SAAS,oBAAoB,4CAA4C,SAAS,eAAe,uGAAuG,mGAAmG,gJAAgJ,mCAAmC,0BAA0B,4CAA4C,qDAAqD,uEAAuE,gEAAgE,gJAAgJ,8DAA8D,KAAK,6BAA6B,OAAO,GAAG,+BAA+B,8CAA8C,4BAA4B,EAAE,qJAAqJ,2EAA2E,SAAS,OAAO,EAAE,KAAK,GAAG,G;;;;;;;;;;;ACAv2E,8DAA8D,WAAW,yDAAyD,8CAA8C,eAAe,2DAA2D,8CAA8C,eAAe,2DAA2D,8CAA8C,8BAA8B,4DAA4D,8CAA8C,kBAAkB,gEAAgE,8CAA8C,gBAAgB,uDAAuD,8CAA8C,iBAAiB,mFAAmF,eAAe,+DAA+D,sEAAsE,sDAAsD,wEAAwE,yEAAyE,qGAAqG,G;;;;;;;;;;;ACAj0C,+CAA+C,sQAAsQ,sCAAsC,qEAAqE,wCAAwC,uIAAuI,wCAAwC,gPAAgP,wEAAwE,6CAA6C,sCAAsC,0CAA0C,wCAAwC,qIAAqI,wCAAwC,+kBAA+kB,wCAAwC,8DAA8D,wCAAwC,2cAA2c,wCAAwC,6DAA6D,wCAAwC,ycAAyc,wCAAwC,4DAA4D,sCAAsC,0CAA0C,Q;;;;;;;;;;;ACAnrG,0BAA0B,kEAAkE,sBAAsB,UAAU,sCAAsC,yBAAyB,UAAU,UAAU,aAAa,4CAA4C,6CAA6C,gBAAgB,yMAAyM,2CAA2C,SAAS,oBAAoB,4CAA4C,SAAS,eAAe,+BAA+B,2BAA2B,kCAAkC,mCAAmC,4CAA4C,kCAAkC,2BAA2B,wEAAwE,0BAA0B,KAAK,6BAA6B,OAAO,GAAG,+BAA+B,SAAS,2BAA2B,2CAA2C,uCAAuC,SAAS,OAAO,EAAE,KAAK,GAAG,G;;;;;;;;;;;ACA/rC,0BAA0B,WAAW,sBAAsB,UAAU,eAAe,wBAAwB,UAAU,eAAe,wBAAwB,UAAU,8BAA8B,yBAAyB,UAAU,kBAAkB,6BAA6B,UAAU,gBAAgB,oBAAoB,UAAU,iBAAiB,gDAAgD,eAAe,+DAA+D,sEAAsE,sDAAsD,qCAAqC,yEAAyE,6BAA6B,G;;;;;;;;;;;;ACAruB;AAAA;AAAO,IAAM,OAAO,GAAG;IACrB;QACE,QAAQ,EAAE,cAAc;QACxB,QAAQ,EAAE;YACR,GAAG,EAAE,mBAAO,CAAC,2HAA0B,CAAC;YACxC,WAAW,EAAE,mBAAO,CAAC,yNAA6D,CAAC;SACpF;KACF;IACD;QACE,QAAQ,EAAE,eAAe;QACzB,QAAQ,EAAE;YACR,GAAG,EAAE,mBAAO,CAAC,gIAA8B,CAAC;YAC5C,WAAW,EAAE,mBAAO,CAAC,gNAA0D,CAAC;SACjF;KACF;IACD;QACE,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE;YACR,GAAG,EAAE,mBAAO,CAAC,qHAAuB,CAAC;YACrC,WAAW,EAAE,mBAAO,CAAC,mNAA0D,CAAC;SACjF;KACF;CACF,CAAC","file":"29.js","sourcesContent":["module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> {\\n  Component,\\n  ChangeDetectionStrategy,\\n  ViewEncapsulation\\n} from <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { CalendarEvent, CalendarMonthViewDay } from <span class=\\\"hljs-string\\\">'angular-calendar'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { Subject } from <span class=\\\"hljs-string\\\">'rxjs'</span>;\\n\\n<span class=\\\"hljs-keyword\\\">const</span> RED_CELL: <span class=\\\"hljs-string\\\">'red-cell'</span> = <span class=\\\"hljs-string\\\">'red-cell'</span>;\\n<span class=\\\"hljs-keyword\\\">const</span> BLUE_CELL: <span class=\\\"hljs-string\\\">'blue-cell'</span> = <span class=\\\"hljs-string\\\">'blue-cell'</span>;\\n\\n@Component({\\n  selector: <span class=\\\"hljs-string\\\">'mwl-demo-component'</span>,\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  encapsulation: ViewEncapsulation.None,\\n  templateUrl: <span class=\\\"hljs-string\\\">'template.html'</span>,\\n  styles: [\\n    `\\n      .red-cell {\\n        background-color: red !important;\\n      }\\n      .blue-cell {\\n        background-color: blue !important;\\n      }\\n    `\\n  ]\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> DemoComponent {\\n  view: <span class=\\\"hljs-built_in\\\">string</span> = <span class=\\\"hljs-string\\\">'month'</span>;\\n\\n  viewDate: <span class=\\\"hljs-built_in\\\">Date</span> = <span class=\\\"hljs-keyword\\\">new</span> <span class=\\\"hljs-built_in\\\">Date</span>();\\n\\n  events: CalendarEvent[] = [];\\n\\n  refresh: Subject&lt;<span class=\\\"hljs-built_in\\\">any</span>&gt; = <span class=\\\"hljs-keyword\\\">new</span> Subject();\\n\\n  cssClass: <span class=\\\"hljs-built_in\\\">string</span> = RED_CELL;\\n\\n  refreshView(): <span class=\\\"hljs-built_in\\\">void</span> {\\n    <span class=\\\"hljs-keyword\\\">this</span>.cssClass = <span class=\\\"hljs-keyword\\\">this</span>.cssClass === RED_CELL ? BLUE_CELL : RED_CELL;\\n    <span class=\\\"hljs-keyword\\\">this</span>.refresh.next();\\n  }\\n\\n  beforeMonthViewRender({ body }: { body: CalendarMonthViewDay[] }): <span class=\\\"hljs-built_in\\\">void</span> {\\n    body.forEach(day =&gt; {\\n      <span class=\\\"hljs-keyword\\\">if</span> (day.date.getDate() % <span class=\\\"hljs-number\\\">2</span> === <span class=\\\"hljs-number\\\">1</span>) {\\n        day.cssClass = <span class=\\\"hljs-keyword\\\">this</span>.cssClass;\\n      }\\n    });\\n  }\\n}\\n\"","module.exports = \"<span class=\\\"hljs-keyword\\\">import</span> { NgModule } from <span class=\\\"hljs-string\\\">'@angular/core'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { CommonModule } from <span class=\\\"hljs-string\\\">'@angular/common'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { RouterModule } from <span class=\\\"hljs-string\\\">'@angular/router'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { CalendarModule, DateAdapter } from <span class=\\\"hljs-string\\\">'angular-calendar'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { DemoUtilsModule } from <span class=\\\"hljs-string\\\">'../demo-utils/module'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { DemoComponent } from <span class=\\\"hljs-string\\\">'./component'</span>;\\n<span class=\\\"hljs-keyword\\\">import</span> { adapterFactory } from <span class=\\\"hljs-string\\\">'angular-calendar/date-adapters/date-fns'</span>;\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    CalendarModule.forRoot({\\n      provide: DateAdapter,\\n      useFactory: adapterFactory\\n    }),\\n    DemoUtilsModule,\\n    RouterModule.forChild([{ path: <span class=\\\"hljs-string\\\">''</span>, component: DemoComponent }])\\n  ],\\n  declarations: [DemoComponent],\\n  exports: [DemoComponent]\\n})\\n<span class=\\\"hljs-keyword\\\">export</span> <span class=\\\"hljs-keyword\\\">class</span> DemoModule {}\\n\"","module.exports = \"<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-demo-utils-calendar-header</span>\\n  [(<span class=\\\"hljs-attribute\\\">view</span>)]=<span class=\\\"hljs-value\\\">\\\"view\\\"</span>\\n  [(<span class=\\\"hljs-attribute\\\">viewDate</span>)]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-demo-utils-calendar-header</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">div</span> <span class=\\\"hljs-attribute\\\">class</span>=<span class=\\\"hljs-value\\\">\\\"text-center\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">button</span> <span class=\\\"hljs-attribute\\\">class</span>=<span class=\\\"hljs-value\\\">\\\"btn btn-primary\\\"</span> (<span class=\\\"hljs-attribute\\\">click</span>)=<span class=\\\"hljs-value\\\">\\\"refreshView()\\\"</span>&gt;</span>Refresh + re-render the current view<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">button</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">div</span>&gt;</span>\\n\\n<span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">div</span> [<span class=\\\"hljs-attribute\\\">ngSwitch</span>]=<span class=\\\"hljs-value\\\">\\\"view\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-calendar-month-view</span>\\n    *<span class=\\\"hljs-attribute\\\">ngSwitchCase</span>=<span class=\\\"hljs-value\\\">\\\"'month'\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">viewDate</span>]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">events</span>]=<span class=\\\"hljs-value\\\">\\\"events\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">refresh</span>]=<span class=\\\"hljs-value\\\">\\\"refresh\\\"</span>\\n    (<span class=\\\"hljs-attribute\\\">beforeViewRender</span>)=<span class=\\\"hljs-value\\\">\\\"beforeMonthViewRender($event)\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-calendar-month-view</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-calendar-week-view</span>\\n    *<span class=\\\"hljs-attribute\\\">ngSwitchCase</span>=<span class=\\\"hljs-value\\\">\\\"'week'\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">viewDate</span>]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">events</span>]=<span class=\\\"hljs-value\\\">\\\"events\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">refresh</span>]=<span class=\\\"hljs-value\\\">\\\"refresh\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-calendar-week-view</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;<span class=\\\"hljs-title\\\">mwl-calendar-day-view</span>\\n    *<span class=\\\"hljs-attribute\\\">ngSwitchCase</span>=<span class=\\\"hljs-value\\\">\\\"'day'\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">viewDate</span>]=<span class=\\\"hljs-value\\\">\\\"viewDate\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">events</span>]=<span class=\\\"hljs-value\\\">\\\"events\\\"</span>\\n    [<span class=\\\"hljs-attribute\\\">refresh</span>]=<span class=\\\"hljs-value\\\">\\\"refresh\\\"</span>&gt;</span>\\n  <span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">mwl-calendar-day-view</span>&gt;</span>\\n<span class=\\\"hljs-tag\\\">&lt;/<span class=\\\"hljs-title\\\">div</span>&gt;</span>\"","module.exports = \"import {\\n  Component,\\n  ChangeDetectionStrategy,\\n  ViewEncapsulation\\n} from '@angular/core';\\nimport { CalendarEvent, CalendarMonthViewDay } from 'angular-calendar';\\nimport { Subject } from 'rxjs';\\n\\nconst RED_CELL: 'red-cell' = 'red-cell';\\nconst BLUE_CELL: 'blue-cell' = 'blue-cell';\\n\\n@Component({\\n  selector: 'mwl-demo-component',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  encapsulation: ViewEncapsulation.None,\\n  templateUrl: 'template.html',\\n  styles: [\\n    `\\n      .red-cell {\\n        background-color: red !important;\\n      }\\n      .blue-cell {\\n        background-color: blue !important;\\n      }\\n    `\\n  ]\\n})\\nexport class DemoComponent {\\n  view: string = 'month';\\n\\n  viewDate: Date = new Date();\\n\\n  events: CalendarEvent[] = [];\\n\\n  refresh: Subject<any> = new Subject();\\n\\n  cssClass: string = RED_CELL;\\n\\n  refreshView(): void {\\n    this.cssClass = this.cssClass === RED_CELL ? BLUE_CELL : RED_CELL;\\n    this.refresh.next();\\n  }\\n\\n  beforeMonthViewRender({ body }: { body: CalendarMonthViewDay[] }): void {\\n    body.forEach(day => {\\n      if (day.date.getDate() % 2 === 1) {\\n        day.cssClass = this.cssClass;\\n      }\\n    });\\n  }\\n}\\n\"","module.exports = \"import { NgModule } from '@angular/core';\\nimport { CommonModule } from '@angular/common';\\nimport { RouterModule } from '@angular/router';\\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\\nimport { DemoUtilsModule } from '../demo-utils/module';\\nimport { DemoComponent } from './component';\\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\\n\\n@NgModule({\\n  imports: [\\n    CommonModule,\\n    CalendarModule.forRoot({\\n      provide: DateAdapter,\\n      useFactory: adapterFactory\\n    }),\\n    DemoUtilsModule,\\n    RouterModule.forChild([{ path: '', component: DemoComponent }])\\n  ],\\n  declarations: [DemoComponent],\\n  exports: [DemoComponent]\\n})\\nexport class DemoModule {}\\n\"","export const sources = [\n  {\n    filename: 'component.ts',\n    contents: {\n      raw: require('!!raw-loader!./component'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=typescript!./component')\n    }\n  },\n  {\n    filename: 'template.html',\n    contents: {\n      raw: require('!!raw-loader!./template.html'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=xml!./template.html')\n    }\n  },\n  {\n    filename: 'module.ts',\n    contents: {\n      raw: require('!!raw-loader!./module'),\n      highlighted: require('!!raw-loader!highlightjs-loader?lang=typescript!./module')\n    }\n  }\n];\n"],"sourceRoot":""}